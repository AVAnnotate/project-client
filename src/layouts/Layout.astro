---
import '../style/main.css';
import '@fontsource-variable/open-sans';
import '@fontsource-variable/inter';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import { getEntry } from 'astro:content';

const projectData = await getEntry('project', 'project');

interface Props {
  background?: string;
  title?: string;
}

const { background, title = projectData.data.project.title } = Astro.props;

const projectBy =
  projectData.data.project.authors || projectData.data.project.creator;
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/my-repo/dist/favicon.svg' />
    <meta name='generator' content={Astro.generator} />

    <!-- google font links -->
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap'
      rel='stylesheet'
    />
    <title>{title}</title>
  </head>
  <body class='flex h-full flex-col mx-auto' transition:animate='initial'>
    <Header />
    <main class=`min-h-[calc(100dvh_-160px)] text-black bg-${background}`>
      <slot />
    </main>
    <Footer projectBy={projectBy} />
  </body>
</html>

<script>
  import { $pagePlayersState } from 'src/store.ts';
  // initially, reset the loaded players to none
  $pagePlayersState.set({});
  const players = document.getElementsByClassName('mediaContainer');
  for (let i = 0; i < players.length; i++) {
    const thisNode = players[i];
    if (thisNode instanceof HTMLElement && thisNode.dataset.playerId) {
      $pagePlayersState.setKey(thisNode.dataset.playerId, {
        annotations: [],
        annotationStarts: [],
        autoScroll: true,
        avFileUuid: '',
        currentAnnotation: 0,
        id: thisNode.dataset.playerUrl || '',
        isPlaying: false,
        filteredAnnotations: [],
        position: 0,
        searchQuery: '',
        seekTo: 0,
        sets: [],
        snapToAnnotations: false,
        showTags: true,
        tags: [],
      });
    }
  }
</script>
