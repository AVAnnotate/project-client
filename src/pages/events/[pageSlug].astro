---
import type { GetStaticPaths } from 'astro';
import { dynamicConfig } from 'dynamic-astro-config';
import Layout from '@layouts/Layout.astro';
import { getEntry } from 'astro:content';
import EventViewer from '@components/EventViewer/index.astro';
import { getPage, getPages } from 'src/utils/pages';
import { randomUUID } from 'crypto';

const projectData = await getEntry('project', 'project');

// @ts-ignore
const baseUrl = import.meta.env.PROD
  ? projectData?.data.project.slug
  : dynamicConfig.base;

export const getStaticPaths = (async () => {
  // filter out custom pages
  const pages = await getPages((page) => page.data.autogenerate.enabled);

  return pages.map((page) => ({
    params: { pageSlug: page.data.slug || page.id },
  }));
}) satisfies GetStaticPaths;

const { pageSlug } = Astro.params;

if (!pageSlug) {
  return Astro.redirect(`/${baseUrl}`);
}

const page = await getPage(pageSlug);

if (!page.data.autogenerate.type_id) {
  return Astro.redirect(`/${baseUrl}`);
}

const playerId = randomUUID();

const eventUuids = Array.isArray(page.data.autogenerate.type_id)
  ? page.data.autogenerate.type_id
  : [page.data.autogenerate.type_id];
---

<Layout title={page.data.title} background='white'>
  <div class='eventContainer' data-player-id={playerId}>
    {eventUuids.map((uuid) => <EventViewer playerId={playerId} uuid={uuid} />)}
  </div>
</Layout>
