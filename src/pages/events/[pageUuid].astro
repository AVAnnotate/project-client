---
import type { GetStaticPaths } from 'astro';
import { dynamicConfig } from 'dynamic-astro-config';
import Layout from '@layouts/Layout.astro';
import Container from '@components/Container.astro';
import { getEntry } from 'astro:content';
import Event from '@components/Event.astro';
import { getPage, getPages } from 'src/utils/pages';

const projectData = await getEntry('project', 'project');

const baseUrl = import.meta.env.PROD
  ? projectData.data.project.slug
  : dynamicConfig.base;

export const getStaticPaths = (async () => {
  // filter out custom pages
  const pages = await getPages((page) => page.data.autogenerate.enabled);

  return pages.map((page) => ({
    params: { pageUuid: page.id },
  }));
}) satisfies GetStaticPaths;

const { pageUuid } = Astro.params;

if (!pageUuid) {
  return Astro.redirect(`/${baseUrl}`);
}

const page = await getPage(pageUuid);

if (!page.data.autogenerate.type_id) {
  return Astro.redirect(`/${baseUrl}`);
}
---

<Layout title={page.data.title} background='gray-100'>
  <Container className='py-16'>
    <Event sticky uuid={page.data.autogenerate.type_id} />
  </Container>
</Layout>
