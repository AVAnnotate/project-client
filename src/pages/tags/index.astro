---
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/Container.astro';
import { dynamicConfig } from '../../../dynamic-astro-config';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import TagPill from '@components/tags/TagPill.astro';
import { getEntry } from 'astro:content';
import { getCollection } from 'astro:content';

const projectData = await getEntry('project', 'project');

const baseUrl = import.meta.env.PROD
  ? projectData.data.project.slug
  : dynamicConfig.base;
const crumbs = [
  {
    label: 'Home',
    link: `/${baseUrl}`,
  },
  {
    label: 'Index',
  },
];

const tags = projectData.data.project.tags;

//check whether there actually are any annotation files
const annotationSets = await getCollection('annotations')
if (!Object.keys(annotationSets).length) {
  return Astro.redirect(`/${baseUrl}`);
}

const detectTag = (
  tag: { tag: string; category: string },
  ann: { tag: string; category: string }[]
) => {
  const lowerCaseAnn = ann.map((t) => ({
    tag: t.tag.toLowerCase(),
    category: t.category.toLowerCase(),
  }));
  const lowerCaseTag = {
    tag: tag.tag.toLowerCase(),
    category: tag.category.toLowerCase(),
  };
  return !!lowerCaseAnn.find((t) => t.tag == lowerCaseTag.tag); //should also match the category but for now the data is bugged so all the categories are speaker
};
const getTagCount = (tag: { tag: string; category: string }) => {
  let count = 0;
  annotationSets.forEach((page) => {
    const pageAnnotations = page.data.annotations;
    pageAnnotations.forEach((ann: any) => {
      if (detectTag(tag, ann.tags)) {
        count = count + 1;
      }
    });
  });
  return count;
};
let tagData: any = {};
tags.tagGroups.forEach((group: { category: string; color: string }) => {
  tagData[group.category] = {
    color: group.color,
    tags: [],
  };
});
tags.tags.forEach((tag: { tag: string; category: string }) => {
  const count = getTagCount(tag);
  tagData[tag.category].tags.push({
    tag: tag.tag,
    count: count,
  });
});
---

<Layout title={`Tag Index - ${projectData.data.project.title}`}>
  <div class='w-full bg-white h-[50px]'>
    <Breadcrumbs crumbs={crumbs} />
  </div>
  <Container className='py-12 flex flex-col gap-8'>
    <h1>Index</h1>
    {
      Object.keys(tagData).map((cat) => (
        <>
          {tagData[cat].tags.length ? (
            <div class='w-full bg-white border border-gray-200 py-6 flex flex-col gap-6'>
              <h3 class='px-6'>{cat}</h3>
              <div class='h-[1px] bg-gray-200 w-full' />
              <div class='px-6 flex flex-row flex-wrap gap-2'>
                {tagData[cat].tags.map((tag: any) =>
                  tag.count ? (
                    <TagPill
                      color={tagData[cat].color}
                      tag={tag.tag}
                      count={tag.count}
                    />
                  ) : null
                )}
              </div>
            </div>
          ) : null}
        </>
      ))
    }
  </Container>
</Layout>
