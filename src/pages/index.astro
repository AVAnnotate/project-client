---
import Layout from '../layouts/Layout.astro';
import Container from '../components/Container.astro';
import { dynamicConfig } from 'dynamic-astro-config';
import { getEntry } from 'astro:content';
import { getCollection } from 'astro:content';

const projectData = await getEntry('project', 'project');
const pageOrder = await getEntry('pages', 'order')

const project = projectData.data.project;

const baseUrl = import.meta.env.PROD
  ? projectData.data.project.slug
  : dynamicConfig.base;

const pages = await getCollection('pages')

let pageData: any = {};

for (let i = 0; i < pageOrder.data.length; i++) {
  const thisPage = pages.find((p) =>
    p.id.includes(pageOrder.data[i])
  );
  console.log(thisPage)
  if (thisPage) {
    const thisPageData: any = await getEntry('pages', thisPage.id);
    pageData[pageOrder.data[i]] = thisPageData.data;
  }
}
---

<Layout
  title={project.title}
  projectName={project.title}
  projectBy={project.creator}
>
  <Container className='py-12 flex flex-col gap-6'>
    <h1>{project.title}</h1>
    <h2>{project.description}</h2>
    <div class='py-12 flex flex-col gap-2'>
      <a href={`/${baseUrl}/tags`}>Index</a>
      {
        Object.keys(pageData)
          .filter(
            (page) =>
              pageData[page as keyof typeof pageData].autogenerate.type ==
              'event'
          )
          .map((page) => (
            <a href={`/${baseUrl}/events/${page}`}>
              {pageData[page as keyof typeof pageData].title}
            </a>
          ))
      }
    </div>
  </Container>
</Layout>
