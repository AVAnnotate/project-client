---
const { attributes, children, element } = Astro.props;
---

{
  (() => {
    const style = { textAlign: element.align };

    switch (element.type) {
      case 'block-quote':
        return (
          <blockquote style={style} {...attributes}>
            {children}
          </blockquote>
        );
      case 'bulleted-list':
        return (
          <ul style={style} {...attributes}>
            {children}
          </ul>
        );
      case 'heading-one':
        return (
          <h1 style={style} {...attributes}>
            {children}
          </h1>
        );
      case 'heading-two':
        return (
          <h2 style={style} {...attributes}>
            {children}
          </h2>
        );
      case 'list-item':
        return (
          <li style={style} {...attributes}>
            {children}
          </li>
        );
      case 'numbered-list':
        return (
          <ol style={style} {...attributes}>
            {children}
          </ol>
        );
      case 'image':
        return (
          <div {...attributes} style={style}>
            <img src={element.url} class={`slate-img-${element.size}`} />
            {children}
          </div>
        );
      case 'grid':
        return (
          <div
            className='slate-grid'
            style={{
              display: 'grid',
              gridTemplateColumns: `${element.layout[0]}fr ${element.layout[1]}fr`,
            }}
            {...attributes}
          >
            {children}
          </div>
        );
      case 'column':
        return (
          <div className='slate-column' {...attributes}>
            {children}
          </div>
        );
      case 'event':
      // todo
      case 'event-comparison':
      // todo
      default:
        return (
          <p style={style} {...attributes}>
            {children}
          </p>
        );
    }
  })()
}
