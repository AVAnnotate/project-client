---
import type { Includes } from '@ty/slate';
import { getEntry } from 'astro:content';
import { randomUUID } from 'node:crypto';
import EventViewer from './index.astro';
import VideoEventCompare from './VideoEventCompare.astro';

interface Props {
  includes: Includes[];
  event1: {
    file?: string;
    start?: number;
    end?: number;
    uuid: string;
  };
  event2: {
    file?: string;
    start?: number;
    end?: number;
    uuid: string;
  };
}

const { includes, event1, event2 } = Astro.props;
---

<div class='grid grid-cols-2'>
  {
    [event1, event2].map(async (event) => {
      const playerId = randomUUID();
      const eventObj = await getEntry('events', event.uuid);

      if (!eventObj) {
        return <p>Event not found!</p>;
      }

      let type = 'Audio';

      if (event.file) {
        const fileType =
          eventObj.data.audiovisual_files[event.file as string].file_type;
        if (fileType) {
          type = fileType;
        }
      } else if (eventObj.data.item_type) {
        type = eventObj.data.item_type;
      } else if (Object.keys(eventObj.data.audiovisual_files).length > 0) {
        type = eventObj.data.audiovisual_files[
          Object.keys(eventObj.data.audiovisual_files)[0]
        ].file_type as string;
      }

      return (
        <div
          class='bg-gray-100 px-4 pb-4 max-h-[700px] overflow-y-auto eventContainer'
          data-player-id={playerId}
        >
          {type === 'Audio' ? (
            <EventViewer
              end={event.end}
              start={event.start}
              includes={includes}
              uuid={event.uuid}
              isEmbed
              isComparison
              playerId={playerId}
              file={event.file}
            />
          ) : (
            <VideoEventCompare
              end={event.end}
              start={event.start}
              includes={includes}
              event={eventObj}
              playerId={playerId}
              file={event.file}
            />
          )}
        </div>
      );
    })
  }
</div>
