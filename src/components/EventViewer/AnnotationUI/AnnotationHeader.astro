---
import AnnotationSettingsMenu from './AnnotationSettingsMenu';
import TagFilter from './TagFilter';
import TextSearch from './TextSearch';
import { getEntry } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

interface Props {
  annotationSets: CollectionEntry<'annotations'>[];
  playerId: string;
  type: 'Audio' | 'Video';
  isComparison?: boolean;
}

const projectData = await getEntry('project', 'project');

const { annotationSets, isComparison, playerId, type } = Astro.props;
---

<div>
  <div
    class={`flex flex-row w-full justify-between items-center ${type === 'Video' ? 'flex-col gap-3' : 'flex-row items-center'}`}
  >
    {
      (!isComparison || type === 'Video') && (
        <div
          class={`flex flex-row justify-between ${type === 'Video' ? 'w-full' : ''}`}
        >
          {!isComparison && <h3 class='font-bold text-lg'>Annotations</h3>}
          {type === 'Video' && !isComparison && (
            <AnnotationSettingsMenu playerId={playerId} client:load />
          )}
        </div>
      )
    }
    {type === 'Video' && <div class='h-1 border-t border-gray-200 w-full' />}
    <div
      class={`flex flex-row gap-8 items-center ${type === 'Video' ? 'w-full justify-between pb-4 z-10 shadow-[0px_4px_2px_-2px_#00000040]' : ''}`}
    >
      <TextSearch playerId={playerId} client:load />
      <div class='flex gap-4'>
        <TagFilter
          annotationSets={annotationSets}
          playerId={playerId}
          projectData={projectData}
          client:load
        />
        {
          (type === 'Audio' || isComparison) && (
            <AnnotationSettingsMenu playerId={playerId} client:load />
          )
        }
      </div>
    </div>
  </div>
</div>
