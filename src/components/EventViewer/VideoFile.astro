---
import type { Includes } from '@ty/slate';
import type { CollectionEntry } from 'astro:content';
import RichText from '../RichText/index.astro';
import Player from '@components/Player';
import Annotations from './AnnotationUI/Annotations/index.astro';
import AnnotationHeader from './AnnotationUI/AnnotationHeader.astro';
import ConditionalContainer from './ConditionalContainer.astro';
import { getCaptionSets } from 'src/utils/events';
import EventHeader from './EventHeader.astro';

export interface Props {
  event: CollectionEntry<'events'>;
  annotationSets: CollectionEntry<'annotations'>[];
  sticky?: boolean;
  end?: number;
  start?: number;
  includes: Includes[];
  file: string;
  isEmbed?: boolean;
  playerId: string;
}

const {
  annotationSets,
  event,
  // include everything by default
  includes,
  start,
  end,
  sticky,
  file,
  playerId,
  isEmbed,
} = Astro.props;

const captionSets = await getCaptionSets(event, file, annotationSets);

const fileObj = event.data.audiovisual_files[file];
const fileIndex = Object.keys(event.data.audiovisual_files).indexOf(file);
const title =
  Object.keys(event.data.audiovisual_files).length === 1
    ? fileObj.label
    : `${fileIndex + 1}. ${fileObj.label}`;
---

<div class='av-file' data-file-id={file} data-player-id={playerId}>
  <div class='flex flex-col gap-[1px] bg-white'>
    <EventHeader {...Astro.props} />
    <div class='bg-gray-100'>
      {
        (includes.includes('annotations') || includes.includes('media')) && (
          <div
            class={`mediaContainer gap-4 ${sticky ? 'sticky top-0' : ''} grid grid-cols-[2fr,1fr] lg:gap-x-4 bg-gray-100`}
            data-player-id={playerId}
          >
            {includes.includes('media') && (
              <ConditionalContainer condition={!isEmbed}>
                <div>
                  <h2 class='text-secondary text-[18px] font-semibold py-[24px]'>
                    {title}
                  </h2>
                  <Player
                    id={playerId}
                    client:load
                    start={start}
                    end={end}
                    vttURLs={captionSets}
                    url={fileObj.file_url}
                    type='Video'
                    fileUuid={file}
                  />
                  <div class='textContent'>
                    {!start && !end && (
                      <>
                        {includes.includes('description') &&
                          event.data.description && (
                            <RichText nodes={event.data.description} />
                          )}
                      </>
                    )}
                  </div>
                </div>
              </ConditionalContainer>
            )}
            {includes.includes('annotations') && (
              <div class='pt-4 mr-6'>
                <AnnotationHeader
                  playerId={playerId}
                  annotationSets={annotationSets}
                  type='Video'
                />
                <Annotations
                  playerId={playerId}
                  annotationSets={annotationSets}
                  file={file}
                  type='Video'
                />
              </div>
            )}
          </div>
        )
      }
    </div>
  </div>
  <ConditionalContainer condition={!!event.data.citation}>
    <p class='py-3 mb-3'>{event.data.citation}</p>
  </ConditionalContainer>
  <ConditionalContainer condition={!!event.data.rights_statement}>
    {
      event.data.rights_statement && (
        <div class='mt-[12px] mb-[12px]'>
          <a
            class='text-blue-400 underline'
            href={event.data.rights_statement}
            target='_blank'
          >
            Rights
          </a>
        </div>
      )
    }
  </ConditionalContainer>
</div>
