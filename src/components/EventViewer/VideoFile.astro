---
import type { Includes } from '@ty/slate';
import type { CollectionEntry } from 'astro:content';
import RichText from '../RichText/index.astro';
import Player from '@components/Player';
import Annotations from './AnnotationUI/Annotations/index.astro';
import AnnotationHeader from './AnnotationUI/AnnotationHeader.astro';
import ConditionalContainer from './ConditionalContainer.astro';
import { getCaptionSets } from 'src/utils/events';
import EventHeader from './EventHeader.astro';

export interface Props {
  event: CollectionEntry<'events'>;
  annotationSets: CollectionEntry<'annotations'>[];
  sticky?: boolean;
  end?: number;
  start?: number;
  includes: Includes[];
  file: string;
  isEmbed?: boolean;
  playerId: string;
}

const {
  annotationSets,
  event,
  // include everything by default
  includes,
  start,
  end,
  sticky,
  file,
  playerId,
  isEmbed,
} = Astro.props;

const captionSets = await getCaptionSets(event, file, annotationSets);

const fileUrl = event.data.audiovisual_files[file].file_url;
---

<div class='av-file' data-file-id={file}>
  <ConditionalContainer
    condition={!isEmbed}
    className='flex flex-col gap-6 bg-white py-6'
  >
    <EventHeader {...Astro.props} />
    {
      (includes.includes('annotations') || includes.includes('media')) && (
        <div
          class={`mediaContainer gap-4 ${sticky ? 'sticky top-0' : ''} grid grid-cols-[2fr,1fr] lg:gap-x-4`}
          data-player-id={playerId}
        >
          {includes.includes('media') && (
            <div>
              <Player
                id={playerId}
                client:load
                start={start}
                end={end}
                vttURLs={captionSets}
                url={fileUrl}
                type='Video'
              />
              <div class='textContent'>
                {!start && !end && (
                  <>
                    {includes.includes('description') &&
                      event.data.description && (
                        <RichText nodes={event.data.description} />
                      )}
                  </>
                )}
              </div>
            </div>
          )}
          {includes.includes('annotations') && (
            <div class='py-4'>
              <AnnotationHeader
                playerId={playerId}
                annotationSets={annotationSets}
                type='Video'
              />
              <Annotations
                playerId={playerId}
                annotationSets={annotationSets}
                file={file}
                type='Video'
              />
            </div>
          )}
        </div>
      )
    }
  </ConditionalContainer>
  <ConditionalContainer condition={!!event.data.citation}>
    <p class='py-3 mb-3'>{event.data.citation}</p>
  </ConditionalContainer>
</div>
