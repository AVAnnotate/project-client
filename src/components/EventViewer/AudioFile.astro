---
import type { SlateEventNodeProps } from '@ty/slate';
import type { CollectionEntry } from 'astro:content';
import Player from '@components/Player';
import Annotations from './AnnotationUI/Annotations/index.astro';
import AnnotationHeader from './AnnotationUI/AnnotationHeader.astro';
import ConditionalContainer from './ConditionalContainer.astro';
import EventHeader from './EventHeader.astro';

interface Props extends SlateEventNodeProps {
  annotationSets: CollectionEntry<'annotations'>[];
  event: CollectionEntry<'events'>;
  file: string;
  isEmbed?: boolean;
  playerId: string;
  isComparison?: boolean;
}

const {
  // include everything by default
  includes,
  start,
  end,
  event,
  file,
  annotationSets,
  isEmbed,
  isComparison,
  playerId,
} = Astro.props;

const fileUrl = event.data.audiovisual_files[file].file_url;
---

<div class='av-file' data-file-id={file}>
  <div class={`sticky top-0 z-10 ${!isEmbed ? 'shadow' : ''}`}>
    <div class='flex flex-col gap-6 bg-white py-6 [&_p]:mb-0!'>
      <EventHeader {...Astro.props} />
      <div
        class='mediaContainer bg-gray-100 gap-4 flex flex-col'
        data-player-id={playerId}
      >
        {
          includes.includes('media') && (
            <ConditionalContainer condition={!isEmbed}>
              <Player
                id={playerId}
                client:load
                start={start}
                end={end}
                url={fileUrl}
                type='Audio'
              />
            </ConditionalContainer>
          )
        }
      </div>
      {
        includes.includes('annotations') && (
          <ConditionalContainer condition={!isEmbed} className='bg-gray-100'>
            <AnnotationHeader
              playerId={playerId}
              annotationSets={annotationSets}
              isComparison={isComparison}
              type='Audio'
            />
          </ConditionalContainer>
        )
      }
    </div>
  </div>
  {
    includes.includes('annotations') && (
      <ConditionalContainer condition={!isEmbed} className='bg-gray-100'>
        <Annotations
          annotationSets={annotationSets}
          playerId={playerId}
          type='Audio'
          file={file}
        />
      </ConditionalContainer>
    )
  }
  <ConditionalContainer
    condition={!!event.data.citation}
    className='bg-gray-100'
  >
    <p class='py-3 mb-3'>{event.data.citation}</p>
  </ConditionalContainer>
</div>
