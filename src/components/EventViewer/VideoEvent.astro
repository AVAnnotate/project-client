---
import Container from '@components/Container.astro';
import type { Includes } from '@ty/slate';
import type { CollectionEntry } from 'astro:content';
import RichText from '../RichText/index.astro';
import Player from '@components/Player';
import Annotations from './AnnotationUI/Annotations/index.astro';
import AnnotationHeader from './AnnotationUI/AnnotationHeader.astro';
import ConditionalContainer from './ConditionalContainer.astro';
import type { EventCollectionEntry } from 'src/utils/pages';

export interface Props {
  event: CollectionEntry<'events'>;
  annotationSets: CollectionEntry<'annotations'>[];
  sticky?: boolean;
  end?: number;
  start?: number;
  includes: Includes[];
  file: string;
  isEmbed?: boolean;
  playerId: string;
}

const {
  annotationSets,
  event,
  // include everything by default
  includes,
  start,
  end,
  sticky,
  file,
  playerId,
  isEmbed,
} = Astro.props;

// @ts-ignore
const url = (event as CollectionEntry<'events'>).data.audiovisual_files[file]
  .file_url;
const captionSets: string[] = (
  event as CollectionEntry<'events'>
).data.audiovisual_files[file].caption_set.map((s: string) => `/${s}.vtt`);
---

<ConditionalContainer
  condition={!isEmbed}
  className='flex flex-col gap-6 bg-gray-100 py-6'
>
  {
    (includes.includes('annotations') || includes.includes('media')) && (
      <div
        class={`mediaContainer gap-4 ${sticky ? 'sticky top-0' : ''} ${event.data.item_type === 'Audio' ? 'flex flex-col' : 'grid grid-cols-[2fr,1fr] lg:gap-x-4'}`}
        data-player-id={playerId}
        data-player-url={url}
      >
        {includes.includes('media') && (
          <div>
            {includes.includes('label') && (
              <h1 class='py-4'>{event.data.label}</h1>
            )}
            <Player
              url={url}
              id={playerId}
              client:only='react'
              type={event.data.item_type}
              start={start}
              end={end}
              vttURLs={captionSets}
            />
            {includes.includes('description') && event.data.description && (
              <div class='my-4'>
                <RichText nodes={event.data.description} />
              </div>
            )}
            <div class='h-1 border-t border-gray-200 w-full' />
            {event.data.citation && (
              <Container>
                <p>{event.data.citation}</p>
              </Container>
            )}
          </div>
        )}
        {includes.includes('annotations') && (
          <div class='py-4'>
            <AnnotationHeader
              playerId={playerId}
              annotationSets={annotationSets}
              type={event.data.item_type}
            />
            <Annotations
              playerId={playerId}
              annotationSets={annotationSets}
              isEmbed={isEmbed}
              type={event.data.item_type}
            />
          </div>
        )}
      </div>
    )
  }
</ConditionalContainer>
