---
import { getEntry } from 'astro:content';
import { dynamicConfig } from 'dynamic-astro-config';
import { getOrder, getPages } from 'src/utils/pages';

const projectData = await getEntry('project', 'project');

const baseUrl = import.meta.env.PROD
  ? projectData.data.project.slug
  : dynamicConfig.base;

const pageOrder = await getOrder();

const pages = await getPages((page) => pageOrder.data.includes(page.id));

// sort to match the order from pageOrder
pages.sort((a, b) => {
  const aIndex = pageOrder.data.indexOf(a.id);
  const bIndex = pageOrder.data.indexOf(b.id);

  if (aIndex > bIndex) {
    return 1;
  } else if (aIndex < bIndex) {
    return -1;
  }

  return 0;
});
---

<div class='py-4 flex flex-col gap-2'>
  {
    pages
      .filter((page) => page.data.autogenerate.type != 'home')
      .map((page) => (
        <a
          class='underline'
          href={`/${baseUrl}/${page.data.autogenerate.enabled ? 'events' : 'pages'}/${page.id}`}
        >
          {page.data.title}
        </a>
      ))
  }
  <a class='underline' href={`/${baseUrl}/tags`}>Index</a>
</div>
