---
import EventViewer from '@components/EventViewer/index.astro';
import TableOfContents from '@components/TableOfContents.astro';

const { attributes, element } = Astro.props;

const getImageClass = (size: 'thumbnail' | 'medium' | 'large' | 'full') => {
  switch (size) {
    case 'thumbnail':
      return 'max-w-40';
    case 'medium':
      return 'max-w-[400px]';
    case 'large':
      return 'max-w-[640px]';
    case 'full':
      return 'max-w-full';
  }
};
---

{
  (async () => {
    const style = { textAlign: element.align };

    switch (element.type) {
      case 'block-quote':
        return (
          <blockquote style={style} {...attributes}>
            <slot />
          </blockquote>
        );
      case 'bulleted-list':
        return (
          <ul style={style} {...attributes}>
            <slot />
          </ul>
        );
      case 'heading-one':
        return (
          <h1 style={style} {...attributes}>
            <slot />
          </h1>
        );
      case 'heading-two':
        return (
          <h2 style={style} {...attributes}>
            <slot />
          </h2>
        );
      case 'list-item':
        return (
          <li style={style} {...attributes}>
            <slot />
          </li>
        );
      case 'numbered-list':
        return (
          <ol style={style} {...attributes}>
            <slot />
          </ol>
        );
      case 'image':
        return (
          <div {...attributes} style={style}>
            <img src={element.url} class={getImageClass(element.size)} />
            <slot />
          </div>
        );
      case 'table-of-contents':
        return (
          <div {...attributes} style={style}>
            <TableOfContents />
            <slot />
          </div>
        );
      case 'grid':
        return (
          <div
            className='slate-grid'
            style={{
              display: 'grid',
              gridTemplateColumns: `${element.layout[0]}fr ${element.layout[1]}fr`,
            }}
            {...attributes}
          >
            <slot />
          </div>
        );
      case 'column':
        return (
          <div className='slate-column' {...attributes}>
            <slot />
          </div>
        );
      case 'event':
        return (
          <div class='bg-gray-100 p-4'>
            <EventViewer
              end={element.end}
              start={element.start}
              includes={element.includes}
              uuids={element.uuid}
              embed
            />
          </div>
        );
      case 'event-comparison':
      // todo
      default:
        return (
          <p style={style} {...attributes}>
            <slot />
          </p>
        );
    }
  })()
}
<style>
  p {
    margin-bottom: 1em;
  }
</style>
